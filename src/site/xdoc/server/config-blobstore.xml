<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

    <properties>
        <title>Apache James Server 3 - Blob Configuration</title>
    </properties>

    <body>

        <section name="BlobStore Configuration">
            <p>
                BlobStore is the dedicated component to store blobs, non-indexable content.
                James uses the BlobStore for storing blobs which are usually mail contents, attachments, deleted mails...
                You can choose the underlying implementation of BlobStore to fit with your James setup.
                It could be the implementation on top of Cassandra or file storage service like Openstack Swift, AWS S3.

                This configuration is only applicable with Guice products.
            </p>
            <p>
                Consult <a href="https://github.com/apache/james-project/blob/master/dockerfiles/run/guice/cassandra-rabbitmq/destination/conf/blob.properties">blob.properties</a>
                in GIT to get some examples and hints.
            </p>

            <p>
                Blobs storing configuration
            </p>
            <dl>
                <dt><strong>implementation</strong></dt>
                <dd>cassandra: use cassandra based BlobStore</dd>
                <dd>s3: use AWS S3 based BlobStore</dd>

                <dt><strong>deduplication/enable</strong></dt>
                <dd>Mandatory. Supported value: true and false.</dd>
                <dd>If you choose to enable deduplication, the mails with the same content will be stored only once.</dd>
                <dd>Warning: Once this feature is enabled, there is no turning back as turning it off will lead to the deletion of all</dd>
                <dd>the mails sharing the same content once one is deleted.</dd>
                <dd>This feature also requires a garbage collector mechanism to effectively drop blobs, which is not implemented yet.</dd>
                <dd>Consequently, all the requested deletions will not be performed, meaning that blobstore will only grow.</dd>
                <dd>Upgrade note: If you are upgrading from James 3.5 or older, the deduplication was enabled.</dd>
            </dl>


            <subsection name="Cassandra BlobStore Cache">
                <p>A Cassandra cache can be enabled to reduce latency when reading small blobs frequently.
                    A dedicated keyspace with a replication factor of one is then used.
                    Cache eviction policy is TTL based.
                    Only blobs below a given threshold will be stored.
                    To be noted that blobs are stored within a single Cassandra row, hence a low threshold should be used.
                </p>
                <dl>
                    <dt><strong>cache.enable</strong></dt>
                    <dd>DEFAULT: false, optional, must be a boolean. Whether the cache should be enabled.</dd>
                </dl>
                <dl>
                    <dt><strong>cache.cassandra.ttl</strong></dt>
                    <dd>DEFAULT: 7 days, optional, must be a duration. Cache eviction policy is TTL based. </dd>
                </dl>
                <dl>
                    <dt><strong>cache.cassandra.timeout</strong></dt>
                    <dd>DEFAULT: 100ms, optional, must be a duration, cannot exceed 1 hour.
                        Timeout after which this cache should be bypassed.</dd>
                </dl>
                <dl>
                    <dt><strong>cache.sizeThresholdInBytes</strong></dt>
                    <dd>DEFAULT: 8192, optional, must be a positive integer. Unit: bytes.
                        Supported units: bytes, Kib, MiB, GiB, TiB
                        Maximum size of stored objects expressed in bytes.</dd>
                </dl>
            </subsection>

            <subsection name="ObjectStorage BlobStore Buckets Configuration">
                <dl>
                    <dt><strong>objectstorage.bucketPrefix</strong></dt>
                    <dd>
                        Bucket is an concept in James and similar to Containers in Swift or Buckets in AWS S3.
                        BucketPrefix is the prefix of bucket names in James BlobStore
                    </dd>

                    <dt><strong>objectstorage.namespace</strong></dt>
                    <dd>
                        BlobStore default bucket name. Most of blobs storing in BlobStore are inside the default bucket.
                        Unless a special case like storing blobs of deleted messages.
                    </dd>
                </dl>
            </subsection>
            <subsection name="ObjectStorage Underlying Service Configuration">
                <subsection name="ObjectStorage AWS S3 Configuration">
                    <dl>
                        <dt><strong>objectstorage.s3.endPoint</strong></dt>
                        <dd>S3 service endpoint</dd>

                        <dt><strong>objectstorage.s3.region</strong></dt>
                        <dd>S3 region</dd>

                        <dt><strong>objectstorage.s3.accessKeyId</strong></dt>
                        <dd><a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys">S3 access key id</a></dd>

                        <dt><strong>objectstorage.s3.secretKey</strong></dt>
                        <dd><a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys">S3 access key secret</a></dd>
                    </dl>
                </subsection>
            </subsection>
        </section>

    </body>

</document>
